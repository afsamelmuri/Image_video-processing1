from PIL import Image
import numpy as np

def rgb_to_cmyk(r, g, b):
    """Convert RGB to CMYK."""
    if (r == 0) and (g == 0) and (b == 0):
        # Black
        return 0, 0, 0, 100

    # RGB [0, 255] -> CMY [0, 1]
    c = 1 - r / 255.
    m = 1 - g / 255.
    y = 1 - b / 255.

    # Extract out K [0, 1]
    min_cmy = min(c, m, y)
    c = (c - min_cmy) / (1 - min_cmy)
    m = (m - min_cmy) / (1 - min_cmy)
    y = (y - min_cmy) / (1 - min_cmy)
    k = min_cmy

    return int(c * 100), int(m * 100), int(y * 100), int(k * 100)

def rgb_to_ycrcb(r, g, b):
    """Convert RGB to YCrCb."""
    y = 0.299*r + 0.587*g + 0.114*b
    cr = (r - y) * 0.713 + 128
    cb = (b - y) * 0.564 + 128

    return int(y), int(cr), int(cb)

# Read the image
image_path = r"C:\Users\Lenovo\Downloads\daimond pp\2nd sem video lab\football.jfif"
image = Image.open(image_path)
image = image.convert('RGB')

# Create arrays to hold the converted values
cmyk_image = Image.new('CMYK', image.size)
ycrcb_image = Image.new('YCbCr', image.size)

# Convert each pixel
cmyk_data = []
ycrcb_data = []
for pixel in image.getdata():
    r, g, b = pixel
    cmyk_data.append(rgb_to_cmyk(r, g, b))
    ycrcb_data.append(rgb_to_ycrcb(r, g, b))

cmyk_image.putdata(cmyk_data)
ycrcb_image.putdata(ycrcb_data)

# Save the modified images
cmyk_image.save(r"C:\Users\Lenovo\Downloads\daimond pp\2nd sem video lab\football_CMYK.jfif")
ycrcb_image.save(r"C:\Users\Lenovo\Downloads\daimond pp\football_YCrCb.jfif")

# Display the original and converted images
fig, axs = plt.subplots(1, 3, figsize=(15, 5))
axs[0].imshow(image)
axs[0].set_title('Original RGB')
axs[0].axis('off')

axs[1].imshow(cmyk_image)
axs[1].set_title('Converted to CMYK')
axs[1].axis('off')

axs[2].imshow(ycrcb_image)
axs[2].set_title('Converted to YCrCb')
axs[2].axis('off')

plt.show()
